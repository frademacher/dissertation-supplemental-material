<?xml version="1.0" encoding="ASCII"?>
<intermediate:IntermediateOperationModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:intermediate="http://www.fhdo.de/lemma/operation/intermediate" sourceModelUri="file://../../Order/Order.operation">
  <imports name="OrderServices" importUri="file://../service models/Order.xmi" importTypeName="MICROSERVICES"/>
  <imports name="Docker" importUri="file://../../Docker.technology" importTypeName="TECHNOLOGY"/>
  <imports name="Kafka" importUri="file://../../Kafka.technology" importTypeName="TECHNOLOGY"/>
  <imports name="MySQL" importUri="file://../../MySQL.technology" importTypeName="TECHNOLOGY"/>
  <imports name="Spring" importUri="file://../../Spring.technology" importTypeName="TECHNOLOGY"/>
  <containers name="OrderServiceContainer" imports="//@imports.1 //@imports.4" operationEnvironment="//@containers.0/@technologyReference/@technology/@environment" qualifiedDeploymentTechnologyName="Docker.Docker">
    <deployedServices name="org.example.OrderService" qualifiedName="org.example.OrderService" imported="true" import="//@imports.0" effectivelyImplemented="true" microserviceType="FUNCTIONAL" visibility="ARCHITECTURE"/>
    <specifications operationMicroserviceReference="//@containers.0/@deployedServices.0">
      <endpoints communicationType="SYNCHRONOUS" protocol="rest" dataFormat="application/json" technology="//@containers.0/@specifications.0/@endpoints.0/@endpointTechnology">
        <addresses>8082:8080</addresses>
        <endpointTechnology name="Spring" import="//@imports.4"/>
      </endpoints>
      <propertyValues value="&#xA;            RUN apk --no-cache add curl&#xA;&#x9;&#x9;&#x9;CMD java ${JAVA_OPTS} -jar ftgo-order-service.jar&#xA;&#x9;&#x9;&#x9;HEALTHCHECK --start-period=30s --interval=5s&#xA;&#x9;&#x9;&#x9;&#x9;CMD curl -f http://localhost:8080/actuator/health || exit 1&#xA;&#x9;&#x9;&#x9;COPY build/libs/ftgo-order-service.jar .&#xA;        " technologySpecificProperty="//@containers.0/@technologyReference/@technology/@properties.1"/>
    </specifications>
    <technologyReference import="//@imports.1">
      <technology name="Docker">
        <environment environmentName="docker:19_03_8" default="true"/>
        <properties name="image" type="string" defaultValue="openjdk:8u171-jre-alpine">
          <featureNames>SINGLE_VALUED</featureNames>
        </properties>
        <properties name="Dockerfile" type="string">
          <featureNames>MANDATORY</featureNames>
          <featureNames>SINGLE_VALUED</featureNames>
        </properties>
      </technology>
    </technologyReference>
  </containers>
  <infrastructureNodes name="MySQL" imports="//@imports.3" operationEnvironment="//@infrastructureNodes.0/@reference/@technology/@environment" qualifiedInfrastructureTechnologyName="MySQL.MySQL">
    <endpoints communicationType="SYNCHRONOUS" protocol="connectorJ" dataFormat="jdbc_enabled" technology="//@infrastructureNodes.0/@endpoints.0/@endpointTechnology">
      <addresses>3306:3306</addresses>
      <endpointTechnology name="MySQL" import="//@imports.3"/>
    </endpoints>
    <defaultValues value="rootpassword" technologySpecificProperty="//@infrastructureNodes.0/@reference/@technology/@properties.0"/>
    <defaultValues value="mysqluser" technologySpecificProperty="//@infrastructureNodes.0/@reference/@technology/@properties.1"/>
    <defaultValues value="mysqlpw" technologySpecificProperty="//@infrastructureNodes.0/@reference/@technology/@properties.2"/>
    <usedByNodes name="OrderServiceContainer" qualifiedTechnologyName="Docker.Docker"/>
    <reference import="//@imports.3">
      <technology name="MySQL">
        <environment environmentName="mysql:5.7.13" default="true"/>
        <properties name="rootPassword" type="string">
          <featureNames>MANDATORY</featureNames>
          <featureNames>SINGLE_VALUED</featureNames>
        </properties>
        <properties name="mySqlUser" type="string">
          <featureNames>MANDATORY</featureNames>
          <featureNames>SINGLE_VALUED</featureNames>
        </properties>
        <properties name="mySqlPassword" type="string">
          <featureNames>MANDATORY</featureNames>
          <featureNames>SINGLE_VALUED</featureNames>
        </properties>
      </technology>
    </reference>
  </infrastructureNodes>
  <infrastructureNodes name="KafkaServer" imports="//@imports.2" operationEnvironment="//@infrastructureNodes.1/@reference/@technology/@environment" qualifiedInfrastructureTechnologyName="Kafka.Kafka">
    <endpoints communicationType="ASYNCHRONOUS" protocol="kafka" dataFormat="binary" technology="//@infrastructureNodes.1/@endpoints.0/@endpointTechnology">
      <addresses>9092:9092</addresses>
      <endpointTechnology name="Kafka" import="//@imports.2"/>
    </endpoints>
    <defaultValues value="ZooKeeper:2181" technologySpecificProperty="//@infrastructureNodes.1/@reference/@technology/@properties.0"/>
    <usedByNodes name="OrderServiceContainer" qualifiedTechnologyName="Docker.Docker"/>
    <reference import="//@imports.2">
      <technology name="Kafka">
        <environment environmentName="bitnami/kafka:latest" default="true"/>
        <properties name="zooKeeperServer" type="string"/>
      </technology>
    </reference>
  </infrastructureNodes>
  <infrastructureNodes name="ZooKeeper" imports="//@imports.2" operationEnvironment="//@infrastructureNodes.2/@reference/@technology/@environment" qualifiedInfrastructureTechnologyName="Kafka.ZooKeeper">
    <endpoints communicationType="ASYNCHRONOUS" protocol="zookeeper" dataFormat="zookeeper" technology="//@infrastructureNodes.2/@endpoints.0/@endpointTechnology">
      <addresses>2181:2181</addresses>
      <addresses>2888:2888</addresses>
      <addresses>3888:3888</addresses>
      <endpointTechnology name="Kafka" import="//@imports.2"/>
    </endpoints>
    <usedByNodes name="KafkaServer" qualifiedTechnologyName="Kafka.Kafka"/>
    <reference import="//@imports.2">
      <technology name="ZooKeeper">
        <environment environmentName="bitnami/zookeeper:latest" default="true"/>
      </technology>
    </reference>
  </infrastructureNodes>
</intermediate:IntermediateOperationModel>
